<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structstub_1_1compare" kind="struct" language="C++" prot="public">
    <compoundname>stub::compare</compoundname>
    <includes refid="compare_8hpp" local="no">compare.hpp</includes>
    <templateparamlist>
      <param>
        <type>class Compare</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structstub_1_1compare_1aac6c6193606e19edbc9673dd36f9d810" prot="public" static="no" mutable="no">
        <type>Compare</type>
        <definition>Compare stub::compare&lt; Compare &gt;::m_compare</definition>
        <argsstring></argsstring>
        <name>m_compare</name>
        <briefdescription>
<para>The comparison function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/giit/data/clones/stub-5d6b38/src/stub/compare.hpp" line="36" column="1" bodyfile="/tmp/giit/data/clones/stub-5d6b38/src/stub/compare.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structstub_1_1compare_1af276c7b92a05b7e7506d47dfed8033bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Value</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool stub::compare&lt; Compare &gt;::operator()</definition>
        <argsstring>(Value v)</argsstring>
        <name>operator()</name>
        <param>
          <type>Value</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Call operator which calls the compare function with the passed value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/giit/data/clones/stub-5d6b38/src/stub/compare.hpp" line="30" column="1" bodyfile="/tmp/giit/data/clones/stub-5d6b38/src/stub/compare.hpp" bodystart="30" bodyend="33"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>An object used to customize comparison of specific arguments when comparing two function calls.</para><para>Example:</para><para>bool test(uint32_t v) { return v == 1U; }</para><para>stub::compare&lt;bool(*)(uint32_t)&gt; compare = { test };</para><para>assert(compare(1U) == true); assert(compare(2U) == false); </para>    </detaileddescription>
    <location file="/tmp/giit/data/clones/stub-5d6b38/src/stub/compare.hpp" line="27" column="1" bodyfile="/tmp/giit/data/clones/stub-5d6b38/src/stub/compare.hpp" bodystart="26" bodyend="37"/>
    <listofallmembers>
      <member refid="structstub_1_1compare_1aac6c6193606e19edbc9673dd36f9d810" prot="public" virt="non-virtual"><scope>stub::compare</scope><name>m_compare</name></member>
      <member refid="structstub_1_1compare_1af276c7b92a05b7e7506d47dfed8033bf" prot="public" virt="non-virtual"><scope>stub::compare</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
