<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structstub_1_1compare__call_1_1implementation" kind="struct" language="C++" prot="private">
    <compoundname>stub::compare_call::implementation</compoundname>
    <basecompoundref prot="public" virt="non-virtual">stub::compare_call&lt; Args &gt;::interface</basecompoundref>
    <templateparamlist>
      <param>
        <type>class...</type>
        <declname>WithArgs</declname>
        <defname>WithArgs</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structstub_1_1compare__call_1_1implementation_1a4b08d14cd6c7e6dfa3f9cef208ec2f34" prot="public" static="no" mutable="no">
        <type>arguments&lt; WithArgs... &gt;</type>
        <definition>arguments&lt;WithArgs...&gt; stub::compare_call&lt; Args &gt;::implementation&lt; WithArgs &gt;::m_expected</definition>
        <argsstring></argsstring>
        <name>m_expected</name>
        <briefdescription>
<para>The tuple containing the expected values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/giit/data/clones/stub-5d6b38/src/stub/compare_call.hpp" line="108" column="1" bodyfile="/tmp/giit/data/clones/stub-5d6b38/src/stub/compare_call.hpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structstub_1_1compare__call_1_1implementation_1ac0dd44e8ca8e79090d94187b5e60889f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>stub::compare_call&lt; Args &gt;::implementation&lt; WithArgs &gt;::implementation</definition>
        <argsstring>(WithArgs &amp;&amp;... expected)</argsstring>
        <name>implementation</name>
        <param>
          <type>WithArgs &amp;&amp;...</type>
          <declname>expected</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/giit/data/clones/stub-5d6b38/src/stub/compare_call.hpp" line="98" column="1" bodyfile="/tmp/giit/data/clones/stub-5d6b38/src/stub/compare_call.hpp" bodystart="98" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="structstub_1_1compare__call_1_1implementation_1a043e2a2aecc363d7fab4cb0e775f2f0e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool stub::compare_call&lt; Args &gt;::implementation&lt; WithArgs &gt;::compare</definition>
        <argsstring>(const arguments&lt; Args... &gt; &amp;actual) const override</argsstring>
        <name>compare</name>
        <param>
          <type>const arguments&lt; Args... &gt; &amp;</type>
          <declname>actual</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/giit/data/clones/stub-5d6b38/src/stub/compare_call.hpp" line="102" column="1" bodyfile="/tmp/giit/data/clones/stub-5d6b38/src/stub/compare_call.hpp" bodystart="102" bodyend="105"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="12">
        <label>stub::compare_call&lt; Args &gt;::implementation&lt; WithArgs &gt;</label>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>stub::compare_call&lt; Args &gt;::interface</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="14">
        <label>stub::compare_call&lt; Args &gt;::implementation&lt; WithArgs &gt;</label>
        <childnode refid="15" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>stub::compare_call&lt; Args &gt;::interface</label>
      </node>
    </collaborationgraph>
    <location file="/tmp/giit/data/clones/stub-5d6b38/src/stub/compare_call.hpp" line="97" column="1" bodyfile="/tmp/giit/data/clones/stub-5d6b38/src/stub/compare_call.hpp" bodystart="96" bodyend="109"/>
    <listofallmembers>
      <member refid="structstub_1_1compare__call_1_1implementation_1a043e2a2aecc363d7fab4cb0e775f2f0e" prot="public" virt="non-virtual"><scope>stub::compare_call::implementation</scope><name>compare</name></member>
      <member refid="structstub_1_1compare__call_1_1implementation_1ac0dd44e8ca8e79090d94187b5e60889f" prot="public" virt="non-virtual"><scope>stub::compare_call::implementation</scope><name>implementation</name></member>
      <member refid="structstub_1_1compare__call_1_1implementation_1a4b08d14cd6c7e6dfa3f9cef208ec2f34" prot="public" virt="non-virtual"><scope>stub::compare_call::implementation</scope><name>m_expected</name></member>
      <member refid="structstub_1_1compare__call_1_1interface_1a9b21b098072b74170762cbba96142331" prot="public" virt="virtual"><scope>stub::compare_call::implementation</scope><name>~interface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
