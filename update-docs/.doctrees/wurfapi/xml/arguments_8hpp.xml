<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="arguments_8hpp" kind="file" language="C++">
    <compoundname>arguments.hpp</compoundname>
    <includes local="no">tuple</includes>
    <includedby refid="compare__call_8hpp" local="yes">/tmp/giit/data/clones/stub-5d6b38/src/stub/compare_call.hpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>tuple</label>
      </node>
      <node id="0">
        <label>/tmp/giit/data/clones/stub-5d6b38/src/stub/arguments.hpp</label>
        <link refid="arguments_8hpp"/>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>/tmp/giit/data/clones/stub-5d6b38/src/stub/compare_call.hpp</label>
        <link refid="compare__call_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/tmp/giit/data/clones/stub-5d6b38/src/stub/arguments.hpp</label>
        <link refid="arguments_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/tmp/giit/data/clones/stub-5d6b38/src/stub/function.hpp</label>
        <link refid="function_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacestub">stub</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2016<sp/>Steinwurf<sp/>ApS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>Rights<sp/>Reserved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>&quot;BSD<sp/>License&quot;.<sp/>See<sp/>the<sp/>accompanying<sp/>LICENSE.rst<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tuple&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestub" kindref="compound">stub</ref></highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>arguments<sp/>=<sp/>decltype(std::make_tuple(std::declval&lt;Args&gt;()...));</highlight></codeline>
<codeline lineno="15"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/tmp/giit/data/clones/stub-5d6b38/src/stub/arguments.hpp"/>
  </compounddef>
</doxygen>
